name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type (one of): patch, minor, major"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: write
      # id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org
          scope: "@digitalservice4germany"
          cache: npm
      - run: npm install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # - run: npm ci
      # - run: npm run build

      # - name: Git configuration
      #   run: |
      #     git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --global user.name "GitHub Actions"

      # - uses: actions-ecosystem/action-get-latest-tag@v1
      #   id: get-latest-tag

      # - uses: actions-ecosystem/action-bump-semver@v1
      #   id: bump-semver
      #   with:
      #     current_version: ${{ steps.get-latest-tag.outputs.tag }}
      #     level: ${{ github.event.inputs.release-type }}
      # - run: echo "new version:"
      # - run: echo ${{ steps.bump-semver.outputs.new_version }}

      # - run: npm --no-git-tag-version --silent version ${{ github.event.inputs.release-type }}

      # # - name: Bump release version
      # #   run: |
      # #     echo "NEW_VERSION=$(npm --no-git-tag-version --silent version $RELEASE_TYPE)" >> $GITHUB_ENV
      # #     echo "RELEASE_TAG=latest" >> $GITHUB_ENV
      # #   env:
      # #     RELEASE_TYPE: ${{ github.event.inputs.release-type }}
      # - name: commit
      #   run: |
      #     git add "package.json"
      #     git commit -m "Release ${{ steps.bump-semver.outputs.new_version }}"
      #     # git tag ${{ env.NEW_VERSION }}

      # # - name: commit
      # #   run: |
      # #     git add "package.json"
      # #     git commit -m "Release ${{ env.NEW_VERSION }}"
      # #     git tag ${{ env.NEW_VERSION }}
      # # - run: npm publish --provenance --access public
      # #   working-directory: dist
      # #   env:
      # #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Push changes to repository
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git push origin && git push --tags
      # # - run: zip -r pkg.zip dist
      # - name: Create GitHub release
      #   uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
      #   with:
      #     tag_name: ${{ env.NEW_VERSION }}
      #     generate_release_notes: true
      #     # files: pkg.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
